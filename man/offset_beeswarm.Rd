% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/position-beeswarm.R
\name{offset_beeswarm}
\alias{offset_beeswarm}
\title{An internal function to calculate new positions for geom_beeswarm}
\usage{
offset_beeswarm(
  data,
  xLim.expand,
  yLim.expand,
  yLim,
  xRange,
  yRange,
  method = "swarm",
  cex = 1,
  side = 0L,
  priority = "ascending",
  fast = TRUE
)
}
\arguments{
\item{data}{A data.frame containing plotting data in columns x and y. 
Usually obtained from data processed by ggplot2.}

\item{xLim.expand}{x axis scale limits plus a small expansion using `ggplot2:::expand_range4`}

\item{yLim.expand}{y data limits plus a small expansion using `grDevices::extendrange`}

\item{yLim}{y axis scale limits}

\item{xRange}{x axis scale range}

\item{yRange}{y axis scale range}

\item{method}{Method for arranging points (see Details below)}

\item{cex}{Scaling for adjusting point spacing (see \code{\link[beeswarm]{swarmx}})}

\item{side}{Direction to perform jittering: 0: both directions; 
1: to the right or upwards; -1: to the left or downwards.}

\item{priority}{Method used to perform point layout (see Details below)}

\item{fast}{Use compiled version of swarm algorithm? This option is ignored 
for all methods expect `"swarm"`, `"swarm2"`, and `"compactswarm"`.}
}
\description{
An internal function to calculate new positions for geom_beeswarm
}
\details{
**method:** specifies the algorithm used to avoid overlapping points. The 
default `"swarm"` method places points in increasing order. If a point would
overlap with an existing point, it is shifted sideways (along the group axis)
by a minimal amount sufficient to avoid overlap. The `"swarm2"` method is very
similar to `"swarm"` but more closely follows the method used in the `beeswarm`
package.

While the `"swarm"` and `"swarm2"` method places points in a predetermined 
order, the `"compactswarm"` method uses a greedy strategy to determine which 
point will be placed next. This often leads to a more tightly-packed layout. 
The strategy is very simple: on each iteration, a point that can be placed as 
close as possible to the non-data axis is chosen and placed. If there are two 
or more equally good points, `priority` is used to break ties.

The other 3 methods first discretise the values along the data axis, in order
to create more efficient packing. The `"square"` method places points on a 
square grid, whereas `"hex"` uses a hexagonal grid. `"centre"`/`"center"` 
uses a square grid to produce a symmetric swarm. The number of break points 
for discretisation is determined by a combination of the available plotting 
area and the `spacing` argument.

**priority:** controls the order in which points are placed, which generally 
has a noticeable effect on the plot appearance. `"ascending"` gives the 
'traditional' beeswarm plot. `"descending"` is the opposite. `"density"` 
prioritizes points with higher local density. `"random"` places points in a 
random order. `"none"` places points in the order provided.
}
\seealso{
\code{\link{geom_beeswarm}}, \code{\link{position_quasirandom}}, 
\code{\link[beeswarm]{swarmx}}

Other position adjustments: 
\code{\link{position_quasirandom}()}
}
\concept{position adjustments}
\keyword{internal}
